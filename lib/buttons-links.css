/*
 * Some generic rules for buttons and links.
 * Links should have an href, should have proper
 * fallbacks and accessibility.
 *
 */


a:not([href])::after {
	content: 'Do you mean for this to be a link or a <button>? It does not link to anything!' !important;
}

a[href=""]::after,
a[href$="#"]::after,
a[href^="javascript"]::after {
	content: 'Do you mean for this to be a <button>? It is a link that does not go anywhere!' !important;
}

.button:not(button):not([role="button"]):not([type="button"]):not([type="submit"]):not([type="reset"])::after,
.btn:not(button):not([role="button"]):not([type="button"]):not([type="submit"]):not([type="reset"])::after,
a[class*="button"]:not([role="button"])::after {
	content: 'If you are going to make it look like a button, make it a button, dammit!' !important;
}

.button:not(a):not(button):not(input)::after,
.btn:not(a):not(button):not(input)::after {
	content: 'You are not using a standard focusable element for your "button". Can keyboard users focus on it?' !important;
}

a[role="button"]:not([href*="/"]):not([href*="."]):not([href*="?"])::after,
a[role="button"][href=""]::after,
a[role="button"][href$="#"]::after,
a[role="button"][href^="javascript"]::after {
	content: 'Either use a proper href fallback or just use a button element.' !important;
}

a.button[class*="disabled"]::after,
a.disabled::after,
a[class*="button"][class*="disabled"]::after {
	content: 'You cannot disable a hyperlink. Use a button element with disabled="disabled".' !important; 
}

[class*="toggle"]:not([aria-pressed]) {
	content: 'If it is toggleable, you should supply an aria-pressed attribute.' !important;
}

a:empty:not([aria-label]):not([aria-labelledby])::after,
button:empty:not([aria-label]):not([aria-labelledby])::after,
button:not([aria-label]):not([aria-labelledby]) img:only-child:not([alt])::after,
a:not([aria-label]):not([aria-labelledby]) img:only-child:not([alt])::after {
	content: 'All buttons and links should have text content, an image with alt text or an ARIA label.' !important;
}